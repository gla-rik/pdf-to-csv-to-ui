# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'laba4.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import csv


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(874, 757)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(10, 50, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(180, 50, 291, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.textEdit_2.setFont(font)
        self.textEdit_2.setObjectName("textEdit_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(250, 10, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_2.setObjectName("label_2")
        self.textEdit_3 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_3.setGeometry(QtCore.QRect(490, 50, 371, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.textEdit_3.setFont(font)
        self.textEdit_3.setObjectName("textEdit_3")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(650, 10, 51, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_3.setFont(font)
        self.label_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_3.setObjectName("label_3")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 100, 851, 85))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_6 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_6.setFont(font)
        self.label_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 0, 2, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_5.setFont(font)
        self.label_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 0, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_4.setFont(font)
        self.label_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 0, 0, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.gridLayout.addWidget(self.comboBox, 1, 0, 1, 1)
        self.comboBox_2 = QtWidgets.QComboBox(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBox_2.setFont(font)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.gridLayout.addWidget(self.comboBox_2, 1, 1, 1, 1)
        self.comboBox_3 = QtWidgets.QComboBox(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBox_3.setFont(font)
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.gridLayout.addWidget(self.comboBox_3, 1, 2, 1, 1)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 260, 851, 451))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.textBrowser.setFont(font)
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(200, 200, 471, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 874, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def group_code(info_about_group, df):
            specialization = []
            check = False
            for line in df:
                if line[0] != '':
                    if info_about_group in line[0]:
                        check = True
                    else:
                        check = False
                if check:
                    specialization.append(line)
            return specialization

        def group_spec(info_about_group, df):
            specialization = []
            check = False
            for line in df:
                if line[0] != '':
                    if info_about_group.lower() in line[1].lower():
                        check = True
                    else:
                        check = False
                if check:
                    specialization.append(line)
            return specialization

        def info_name(name, df):
            name_list = []
            for line in df:
                if line[0] != '':
                    spec = line
                if name.lower() in line[1].lower():
                    name_list.append(spec)
                    name_list.append(line)
            return name_list

        def info_level(level, df):
            level_list = []
            check = False
            for line in df:
                if line[0] != '':
                    spec = line
                    check = True
                if level.lower() in line[1].lower():
                    if check:
                        level_list.append(spec)
                        check = False
                    level_list.append(line)
            return level_list

        def info_doc(doc, df):
            doc_list = []
            check = False
            for line in df:
                if line[0] != '':
                    spec = line
                    check = True
                if doc.lower() in line[4].lower():
                    if check:
                        doc_list.append(spec)
                        check = False
                    doc_list.append(line)
            return doc_list

        def info_consent(consent, df):
            consent_list = []
            check = False
            if consent == 'Есть':
                consent = 'V'
            else:
                consent = ''
            for line in df:
                if line[0] != '':
                    spec = line
                    check = True
                if consent.lower() == line[5].lower():
                    if check:
                        consent_list.append(spec)
                        check = False
                    consent_list.append(line)
            return consent_list

        def info():
            df = data_list
            self.textBrowser.setText('')
            code_in = self.textEdit.toPlainText()
            spec = self.textEdit_2.toPlainText()
            name = self.textEdit_3.toPlainText()
            level = self.comboBox.currentText()
            doc = self.comboBox_2.currentText()
            consent = self.comboBox_3.currentText()

            """идем слева направо по интерфейсу"""
            if code_in != '':
                text = group_code(code_in, df)
                if name != '':
                    text = info_name(name, text)
                if level != 'Все степени':
                    text = info_level(level, text)
                if doc != 'Любой':
                    text = info_doc(doc, text)
                if consent != 'Любое':
                    text = info_consent(consent, text)

            elif spec != '':
                text = group_spec(spec, df)
                if name != '':
                    text = info_name(name, text)
                if level != 'Все степени':
                    text = info_level(level, text)
                if doc != 'Любой':
                    text = info_doc(doc, text)
                if consent != 'Любое':
                    text = info_consent(consent, text)

            elif name != '':
                text = info_name(name, df)
                if level != 'Все степени':
                    text = info_level(level, text)
                if doc != 'Любой':
                    text = info_doc(doc, text)
                if consent != 'Любое':
                    text = info_consent(consent, text)

            elif level != 'Все степени':
                text = info_level(level, df)
                if doc != 'Любой':
                    text = info_doc(doc, text)
                if consent != 'Любое':
                    text = info_consent(consent, text)

            elif doc != 'Любой':
                text = info_doc(doc, df)
                if consent != 'Любое':
                    text = info_consent(consent, text)

            elif consent != 'Любое':
                text = info_consent(consent, df)

            else:
                text = data_list

            for i in text:
                self.textBrowser.setText(self.textBrowser.toPlainText() + str(i) + '\n')

        self.pushButton.clicked.connect(info)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Направление"))
        self.textEdit.setHtml(_translate("MainWindow",
                                         "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                         "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                         "p, li { white-space: pre-wrap; }\n"
                                         "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
                                         "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.textEdit_2.setHtml(_translate("MainWindow",
                                           "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                           "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                           "p, li { white-space: pre-wrap; }\n"
                                           "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
                                           "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "Специальность"))
        self.textEdit_3.setHtml(_translate("MainWindow",
                                           "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                           "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                           "p, li { white-space: pre-wrap; }\n"
                                           "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
                                           "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "ФИО"))
        self.label_6.setText(_translate("MainWindow", "Согласие"))
        self.label_5.setText(_translate("MainWindow", "Вид документа"))
        self.label_4.setText(_translate("MainWindow", "Степень"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Все степени"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Бакалавриат"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Специалитет"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "Любой"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "Копия"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "Оригинал"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "Любое"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "Есть"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "Нет"))
        self.pushButton.setText(_translate("MainWindow", "Поиск"))


if __name__ == "__main__":
    file_name = 'result.csv'
    data_list = [[]]
    lst = []
    with open(file_name, encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            if len(data_list[0]) == 0:
                for key in row.keys():
                    data_list[0].append(key)
            for value in row.values():
                lst.append(value)
            data_list.append(lst)
            lst = []
    for i in range(len(data_list)):
        data_list[i][1] = data_list[i][1].replace('\n', '')

    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
